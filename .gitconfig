[user]
    name = h5law 
    email = h5law.curve514@passfwd.com
    signingKey = F80B0DE79DC5204F561A0DE35A64130002E4B553

[commit]
    gpgSign = true

[credential]
    helper = store --file ~/.sec/h5law-github-pat.txt
    helper = cache --timeout 3600

[init]
    defaultBranch = main

[tag]
    gpgsign = true

[core]
    editor = nvim
    excludesfile = /Users/harry/.gitignore_global

[safe]
    repository = ./

[pretty]
    better-oneline = "format:%C(auto)%h%d %s %Cblue[%cn]"

[alias]
    c  = commit
    s  = status
    d  = diff
    dc = diff --cached
    ds = diff --staged

    # Shows all branches
    branches = branch -a
    # Shows all tags
 	tags     = tag

    # Shows commit info in its tree form
	tree  = log --pretty=better-oneline --all --graph
    # Show commit into in its ls form
	ls    = log --pretty=better-oneline
    # Shows commit info in its ll form
	ll    = log --pretty=better-oneline --numstat
	details = "!f() { git ll "$1"^.."$1"; }; f"

    pull = pull --ff-only
    main = checkout main
    last = checkout -

    # Add all exisisting files and show status
	a   = !cd ${GIT_PREFIX:-.} && git add . && git s
    # Add all files, exisisting and new and show status  
	aa  = !git add -A && git s
    # Add all exisisting files and commit
 	ac  = !cd ${GIT_PREFIX:-.} && git add . && git c
    # Add all files, exisisting and new and commit
	aac = !git add -A && git c

    # Doesn;t affect changes, adds back to workspace from staging area
    unstage  = reset HEAD
    # CAREFUL: undooes changes, deletes new files - effectively gives a new slate
	cleanout = !git clean -df && git checkout -- .

	uncommit = reset --soft HEAD~1
	unmerge  = reset --hard ORIG_HEAD

    merge-span  = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
	merge-log   = "!git ls `git merge-span .. $1`"
	merge-diff  = "!git diff `git merge-span ... $1`"


[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
